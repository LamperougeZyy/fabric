// Code generated by protoc-gen-go. DO NOT EDIT.
// source: distribute_list_puller.proto

package list_puller

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	ChannelId            string   `protobuf:"bytes,1,opt,name=ChannelId,proto3" json:"ChannelId,omitempty"`
	FileSuffix           string   `protobuf:"bytes,2,opt,name=FileSuffix,proto3" json:"FileSuffix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_distribute_list_puller_dad113963a23821b, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *Request) GetFileSuffix() string {
	if m != nil {
		return m.FileSuffix
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "list_puller.Request")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PullListServiceClient is the client API for PullListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PullListServiceClient interface {
	GetDistributeList(ctx context.Context, in *Request, opts ...grpc.CallOption) (*DistributeList, error)
}

type pullListServiceClient struct {
	cc *grpc.ClientConn
}

func NewPullListServiceClient(cc *grpc.ClientConn) PullListServiceClient {
	return &pullListServiceClient{cc}
}

func (c *pullListServiceClient) GetDistributeList(ctx context.Context, in *Request, opts ...grpc.CallOption) (*DistributeList, error) {
	out := new(DistributeList)
	err := c.cc.Invoke(ctx, "/list_puller.PullListService/GetDistributeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PullListServiceServer is the server API for PullListService service.
type PullListServiceServer interface {
	GetDistributeList(context.Context, *Request) (*DistributeList, error)
}

func RegisterPullListServiceServer(s *grpc.Server, srv PullListServiceServer) {
	s.RegisterService(&_PullListService_serviceDesc, srv)
}

func _PullListService_GetDistributeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PullListServiceServer).GetDistributeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/list_puller.PullListService/GetDistributeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PullListServiceServer).GetDistributeList(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _PullListService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "list_puller.PullListService",
	HandlerType: (*PullListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDistributeList",
			Handler:    _PullListService_GetDistributeList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "distribute_list_puller.proto",
}

func init() {
	proto.RegisterFile("distribute_list_puller.proto", fileDescriptor_distribute_list_puller_dad113963a23821b)
}

var fileDescriptor_distribute_list_puller_dad113963a23821b = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x49, 0xc9, 0x2c, 0x2e,
	0x29, 0xca, 0x4c, 0x2a, 0x2d, 0x49, 0x8d, 0xcf, 0xc9, 0x2c, 0x2e, 0x89, 0x2f, 0x28, 0xcd, 0xc9,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46, 0x12, 0x92, 0x12, 0x45, 0x53,
	0x0a, 0x51, 0xa3, 0xe4, 0xce, 0xc5, 0x1e, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0x24, 0xc3,
	0xc5, 0xe9, 0x9c, 0x91, 0x98, 0x97, 0x97, 0x9a, 0xe3, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1,
	0x19, 0x84, 0x10, 0x10, 0x92, 0xe3, 0xe2, 0x72, 0xcb, 0xcc, 0x49, 0x0d, 0x2e, 0x4d, 0x4b, 0xcb,
	0xac, 0x90, 0x60, 0x02, 0x4b, 0x23, 0x89, 0x18, 0x45, 0x72, 0xf1, 0x07, 0x94, 0xe6, 0xe4, 0xf8,
	0x64, 0x16, 0x97, 0x04, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0xb9, 0x71, 0x09, 0xba, 0xa7,
	0x96, 0xb8, 0xc0, 0xed, 0x05, 0xc9, 0x09, 0x89, 0xe8, 0x21, 0x3b, 0x14, 0x6a, 0xb7, 0x94, 0x34,
	0x8a, 0x28, 0xaa, 0x96, 0x24, 0x36, 0xb0, 0x53, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf8,
	0xa6, 0x2b, 0x15, 0xee, 0x00, 0x00, 0x00,
}
